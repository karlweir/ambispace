<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ScreenShakeAmount = 0

/* Enemy Spawning */
SecondsBetweenEnemySpawns = 0.4
SecondsSinceLastEnemySpawn = 0


/* Global constants */

BitsReassembled = 0
NumberOfBitsThePlayerIsMadeOf = 9


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* Enemy spawning*/
SecondsSinceLastEnemySpawn = SecondsSinceLastEnemySpawn + 1/room_speed

if SecondsSinceLastEnemySpawn &gt;= SecondsBetweenEnemySpawns {
    //Spawn enemy
    if choose(true,false) {
    SpawnX = random(room_width)
    SpawnY = choose(0, room_height)
    } else {
    SpawnX = choose(0, room_width)
    SpawnY = random(room_height)
    }
    
    instance_create(SpawnX, SpawnY, choose(oRock))
    SecondsSinceLastEnemySpawn = 0
}

if ScreenShakeAmount &gt; 0 {
    view_xview = x + random_range(-ScreenShakeAmount,ScreenShakeAmount)
    view_yview = y + random_range(-ScreenShakeAmount,ScreenShakeAmount)
    ScreenShakeAmount = ScreenShakeAmount - 2
} else {
    ScreenShakeAmount = 0
    x = view_xview
    y = view_yview
}

if (keyboard_check_pressed(vk_space)) {
    audio_play_sound(bC3,5,false)
    audio_sound_gain(bC3, 0.4, 0)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
